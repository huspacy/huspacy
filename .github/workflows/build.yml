name: Build

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: huspacy
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]

    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.2.2

      - name: Install Python dependencies
        run: poetry install --with dev

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-${{ matrix.python-version }}poetry-${{ hashFiles('poetry.lock') }}

      - name: Test with pytest
        run: |
          poetry run pytest

      - name: Setup flake8 annotations
        uses: rbialon/flake8-annotations@v1

      - name: Lint with flake8
        run: |
          poetry run flake8 huspacy ../scripts

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Build package
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
        run: |
          echo "Running the pipeline on $BRANCH_NAME branch"
          if [[ "$BRANCH_NAME" == "master" ]]
          then
            poetry version --short
          else
            sed -i -E 's/name = \"huspacy\"/name = \"huspacy-nightly\"/' pyproject.toml
            poetry version $(poetry version --short)-dev.$GITHUB_RUN_NUMBER
            poetry version --short
          fi

          poetry build -f wheel

  publish_package:
    runs-on: ubuntu-latest
    needs: build_and_test
    defaults:
      run:
        working-directory: huspacy
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.2.2

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-${{ matrix.python-version }}poetry-${{ hashFiles('poetry.lock') }}

      - name: Install Python dependencies
        run: poetry install --with dev

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          name: wheel-3.9
          path: dist

      - name: Publish package
        run: poetry run twine upload --non-interactive dist/*
