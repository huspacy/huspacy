[paths]
train = null
dev = null
tagger_model = null

[system]
gpu_allocator = "pytorch"
seed = 0

[nlp]
lang = "hu"
pipeline = ["transformer","senter","experimental_arc_predicter","experimental_arc_labeler"]
batch_size = 256
disabled = []
before_creation = null
after_creation = null
after_pipeline_creation = null
tokenizer = {"@tokenizers":"spacy.Tokenizer.v1"}

[components]

[components.senter]
source = ${paths.tagger_model}

[components.senter.model]
@architectures = "spacy.Tagger.v1"
nO = null

[components.senter.model.tok2vec]
@architectures = "spacy-transformers.TransformerListener.v1"
grad_factor = 1.0
upstream = "transformer"
pooling = {"@layers":"reduce_mean.v1"}

[components.experimental_arc_labeler]
factory = "experimental_arc_labeler"

[components.experimental_arc_labeler.model]
@architectures = "spacy-experimental.Bilinear.v1"
hidden_width = 128
mixed_precision = true

[components.experimental_arc_labeler.model.tok2vec]
@architectures = "spacy-transformers.TransformerListener.v1"
grad_factor = 1.0
upstream = "transformer"
pooling = {"@layers":"reduce_mean.v1"}

[components.experimental_arc_predicter]
factory = "experimental_arc_predicter"

[components.experimental_arc_predicter.model]
@architectures = "spacy-experimental.PairwiseBilinear.v1"
hidden_width = 256
nO = 1
mixed_precision = true

[components.experimental_arc_predicter.model.tok2vec]
@architectures = "spacy-transformers.TransformerListener.v1"
grad_factor = 1.0
upstream = "transformer"
pooling = {"@layers":"reduce_mean.v1"}

[components.transformer]
source = ${paths.tagger_model}

[components.transformer.model]
@architectures = "spacy-transformers.TransformerModel.v3"

[components.transformer.model.get_spans]
@span_getters = "spacy-transformers.strided_spans.v1"
window = 128
stride = 96

[components.transformer.model.grad_scaler_config]

[components.transformer.model.tokenizer_config]
use_fast = true

[components.transformer.model.transformer_config]

[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
max_length = 0
gold_preproc = false
limit = 0
augmenter = null

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
max_length = 2000
gold_preproc = false
limit = 0
augmenter = null

[training]
accumulate_gradient = 3
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
dropout = 0.1
patience = 3000
max_epochs = 5000
max_steps = 0
eval_frequency = 200
frozen_components = []
before_to_disk = null
annotating_components = ["senter"]

[training.batcher]
@batchers = "spacy.batch_by_padded.v1"
discard_oversize = true
get_length = null
size = 2000
buffer = 256

[training.logger]
@loggers = "spacy.WandbLogger.v3"
project_name = "spacy_ner_test_train"

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false
eps = 0.00000001

[training.optimizer.learn_rate]
@schedules = "warmup_linear.v1"
warmup_steps = 250
total_steps = 20000
initial_rate = 0.00005

[training.score_weights]
dep_uas = 0.15
dep_las = 0.15
dep_las_per_type = null
sents_p = null
sents_r = null
sents_f = 0.2
pos_acc = null
morph_acc = null
morph_per_feat = null
tag_acc = null
lemma_acc = null
bound_dep_uas = 0.1
bound_dep_las = 0.1

[pretraining]

[initialize]
vectors = null

[initialize.components]

[initialize.tokenizer]
